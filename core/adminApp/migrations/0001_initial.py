# Generated by Django 5.2 on 2025-05-12 12:31

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('user_type', models.CharField(blank=True, choices=[('seller', 'Seller'), ('buyer', 'Buyer'), ('volunteer', 'Volunteer'), ('admin', 'Admin'), ('company', 'Company')], max_length=20, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=15, null=True)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=40, null=True)),
                ('state', models.CharField(blank=True, max_length=30, null=True)),
                ('pin_code', models.CharField(blank=True, max_length=30, null=True)),
                ('company_name', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_person_name', models.CharField(blank=True, max_length=100, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='E_waste',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=100)),
                ('product_condition', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('product_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('submitted_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('listing_status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CompanyCart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('in_cart', 'In Cart'), ('purchased', 'Purchased')], default='in_cart', max_length=20)),
                ('company', models.ForeignKey(limit_choices_to={'user_type': 'company'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('e_waste_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminApp.e_waste')),
            ],
        ),
        migrations.CreateModel(
            name='EWasteImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='seller_products/')),
                ('e_waste', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='adminApp.e_waste')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_method', models.CharField(max_length=50)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('order_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('processing', 'Processing'), ('shipped', 'Shipped'), ('on the way', 'On the way'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled')], default='processing', max_length=20)),
                ('pickup_datetime', models.DateTimeField(blank=True, null=True)),
                ('delivery_datetime', models.DateTimeField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_orders', to=settings.AUTH_USER_MODEL)),
                ('driver', models.ForeignKey(blank=True, limit_choices_to={'user_type': 'volunteer'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='driver_orders', to=settings.AUTH_USER_MODEL)),
                ('e_waste_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminApp.e_waste')),
            ],
        ),
        migrations.CreateModel(
            name='RefurbishedProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('laptop', 'Laptop'), ('mobile', 'Mobile'), ('fridge', 'Fridge'), ('ac', 'AC'), ('other', 'Other')], max_length=20)),
                ('product_name', models.CharField(max_length=100)),
                ('image', models.ImageField(upload_to='refurbished_products/')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField(blank=True, null=True)),
                ('warranty', models.CharField(blank=True, max_length=100, null=True)),
                ('submitted_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('listing_status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('ram', models.CharField(blank=True, max_length=50, null=True)),
                ('storage', models.CharField(blank=True, max_length=100, null=True)),
                ('processor', models.CharField(blank=True, max_length=100, null=True)),
                ('display_size', models.CharField(blank=True, max_length=50, null=True)),
                ('capacity', models.CharField(blank=True, max_length=50, null=True)),
                ('door', models.CharField(blank=True, max_length=50, null=True)),
                ('energy_rating', models.CharField(blank=True, max_length=50, null=True)),
                ('extra_info', models.TextField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RefurbishedOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_method', models.CharField(max_length=50)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('order_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('processing', 'Processing'), ('shipped', 'Shipped'), ('on the way', 'On the way'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled')], default='processing', max_length=20)),
                ('pickup_datetime', models.DateTimeField(blank=True, null=True)),
                ('delivery_datetime', models.DateTimeField(blank=True, null=True)),
                ('buyer', models.ForeignKey(limit_choices_to={'user_type': 'buyer'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('driver', models.ForeignKey(blank=True, limit_choices_to={'user_type': 'volunteer'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='refurbished_driver_orders', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminApp.refurbishedproduct')),
            ],
        ),
        migrations.CreateModel(
            name='RefurbishedProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='refurbished_products/')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='adminApp.refurbishedproduct')),
            ],
        ),
    ]
